<?php
    $hello=" Привет, ";
    $nickname="Александр!";
    $hellow="Продолжаем обучение PHP. Кодим.";
?>
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Создание собственных функций. Валидация функций.</title>
    <link rel="stylesheet" type="text/css" href="normalize.css">
    <link rel="stylesheet" type="text/css" href="style.css">
</head>
<body>
    <header class="">
        <?php
            echo "<h3>".$hello.$nickname."</h3>";
            echo "<h3>".$hellow."</h3>";
        ?>
        <h1>Создание собственных функций. Валидация функций</h1>
    </header>
    <div class="descr">
        <p>
            Функция по своей сути в PHP - это маленькая программа с помощью которой можно выполнить вычисление или действие.
        </p>
        <p>
            <b>Функция</b> - это именованный блок кода, в данном случае на языке PHP, который определяется один раз, а затем может вызываться на исполнение сколько угодно раз.
        </p>
        <p>
            Определение функции выполняется с помощью ключевого слова <b style="color:#FF8C00;">function</b> за которым указываются следующие компоненты:
            <ul>
                <li>
                    <b style="color:#228B22">Идентификатор</b> , определяющий имя функции. Он будет использован для создания новой переменной, которой будет присвоена функция. Имена функций следуют тем же правилам, что и именование переменных.
                </li>
                
                    <i style="color:#FF1493;">Примечание: имена функций не чувствительны к регистру букв.</i>
                
                <li>
                    <b style="color:#228B22;">Пара круглых скобок вокруг списка из нуля или более идентификаторов, разделенных запятыми</b>. Эти идентификаторы будут определять имена параметров функции. В теле функции они используются в качестве локальных переменных.
                </li>
                <li>
                    Пара фигурных скобок с нулем или более инструкций. Эти инструкции составляют тело функции: они выполняются при каждом вызове функции.
                </li>
            </ul>
            Синтаксис определения функции выглядит следующим образом:<br>
            <ul>
                <li>function имя_функции([параметры]) { блок кода }</li>
            </ul>
            где квадратные скобки ([]) означают необязательность.
        </p>
        <p>
            Создадим и напишем простую функцию, которая будет возвращать значение результата:<br>
            <ul>
                <li>?php</li>
                <li>function sum($a, $b){</li>
                <li>return $a+$b;</li>
                <li>}</li>
                <li>echo sum(2, 3);</li>
                <li>?></li>
            </ul>
            Вот собственно и все.
        </p>
        <p>
            Теперь в кратце распишем, что мы сделали:
            <ul>
                <li>С помощью ключевого слова <b>fuction</b> создали функцию и дали ей имя - <b>sum</b>;</li>
                <i style="color:#8B0000;">ВАЖНО - имя функции определяется тем, что она выполняет и пишется на английском языке. Недопускается имя функции не соответствующее её назначению или действию.</i>
                <li>Далее в круглых скобках указали параметры функции <b>sum</b>, а именно переменные - $a и $b;</li>
                <li>Далее написали сам блок кода, т.е. что должна делать эта функция, в нашем случаи она должна сложить значения переменных $a и $b. После чего, сумму значения вывести, т.е. возратить результат.</li>
                <li>После создания функции, с помощью echo мы выводим результат нашей функции в браузере.</li>
                <li>За функцией echo мы пишем непосредственно нашу функцию <b>sum</b>, где в скобках уже указываем значения переменных $a и $b.</li>                
            </ul>
            Теперь пишем нашу фукнцию в PHP коде и смотрим ниже на результат.
        </p>
        <div class="code__php">

        </div>
    </div>
</body>
</html>